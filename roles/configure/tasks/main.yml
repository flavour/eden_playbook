---
- name: Updating hosts file
  lineinfile: dest=/etc/hosts
              regexp="^localhost.localdomain localhost"
              insertafter="^localhost.localdomain localhost"
              line="{{ sitename }} {{ hostname }} localhost.localdomain localhost"
              state=present

- name: Updating hostname file
  template: src=hostname dest=/etc/hostname

- name: Updating mailname file
  template: src=mailname dest=/etc/mailname

- name: Configure for Internet Mail Delivery
  command: dpkg-reconfigure -f noninteractive exim4-config

- name: Copying 000_config.py
  command: cp /home/web2py/applications/eden/private/templates/000_config.py /home/web2py/applications/eden/models

- name: Editing 000_config.py
  lineinfile: dest=/home/web2py/applications/eden/models/000_config.py
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  with_items:
    - { regexp: '^settings.base.template = \"default\"', line: 'settings.base.template = \"{{ template }}\"' }
    - { regexp: '^FINISHED_EDITING_CONFIG_FILE = False', line: 'FINISHED_EDITING_CONFIG_FILE = True' }
    - { regexp: 'akeytochange', line: 'settings.auth.hmac_key = \"{{ sitename }}{{ password }}\"' }
    - { regexp: '^#settings.base.public_url = \"http://127.0.0.1:8000\"', line: 'settings.base.public_url = \"http://{{ sitename }}\"' }
    - { regexp: '^#settings.base.cdn = True', line: 'settings.base.cdn = True' }

- name: Transfer pgpass.sql
  template: src=pgpass.sql dest=/tmp/pgpass.sql

- name: Update PostgreSQL password
  command: su -c - postgres "psql -q -d template1 -f /tmp/pgpass.sql"

- name: Remove pgpass.sql
  file: path=/tmp/pgpass.sql state=absent

- name: Create DB
  command: su -c - postgres "createdb -O sahana -E UTF8 sahana -T template0"

- name: Get PostGIS version
  shell: dpkg-query -L postgresql-9.3-postgis-scripts | grep -P "postgis--\d+.\d+.\d+.sql"
  register: postgis_version

- name: PostGIS DB Config
  command: "{{ item }}"
  with_items:
    - su -c - postgres "psql -q -d sahana -f {{ postgis_version.stdout }}"
    - su -c - postgres "psql -q -d sahana -c 'grant all on geometry_columns to sahana;'"
    - su -c - postgres "psql -q -d sahana -c 'grant all on spatial_ref_sys to sahana;'"

- name: Configure DB
  lineinfile: dest=/home/web2py/applications/eden/models/000_config.py
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  with_items:
    - { regexp: '^#settings.database.db_type = \"postgres\"', line: 'settings.database.db_type = \"postgres\"' }
    - { regexp: '^#settings.database.password = \"password\"', line: 'settings.database.password = \"{{ password }}\"' }
    - { regexp: '^#settings.gis.spatialdb = True', line: 'settings.gis.spatialdb = True' }
    - { regexp: '^settings.base.migrate = False', line: 'settings.base.migrate = True' }

- name: Run web2py
  command: sudo -H -u web2py python web2py.py -S eden -M -R applications/eden/static/scripts/tools/noop.py chdir=/home/web2py

- name: Configuring for Production
  lineinfile: dest=/home/web2py/applications/eden/models/000_config.py
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  with_items:
    - { regexp: '^#settings.base.prepopulate = 0', line: 'settings.base.prepopulate = 0' }
    - { regexp: '^settings.base.migrate = True', line: 'settings.base.migrate = False' }

- name: Run web2py
  command: sudo -H -u web2py python web2py.py -S eden -M -R applications/eden/static/scripts/tools/compile.py chdir=/home/web2py

- name: Update crontab
  copy: src=cron dest=/etc/crontab
  notify:
   - restart cherokee
   - start uwsgi-prod
